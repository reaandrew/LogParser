#!/usr/bin/python

from parsers import W3CIISLogJsonConverter
import argparse
import glob
import os
import cjson
import stopwatch
from reports import ByHourHitCounts

def convert(args):
    for file in glob.glob(args.file):
        filepath = os.path.abspath(file)
        outputpath = os.path.abspath(args.output)
        print(filepath, outputpath)
        converter = W3CIISLogJsonConverter()
        converter.convert(filepath, outputpath)

def count_by_hour(args):
    outputpath = os.path.abspath(args.output)
    converter = W3CIISLogJsonConverter()
    by_hour_hit_count = ByHourHitCounts(outputpath)
    converter.addListener(by_hour_hit_count)
    timer = stopwatch.Timer()
    converter.enumerate_files(args.file)
    timer.stop()
    print(timer.elapsed)

functionlist = {
            'convert' : convert,
            'countbyhour' : count_by_hour
        }

parser = argparse.ArgumentParser(description='Convert IIS Log in W3C Format into JSON')


parser.add_argument('file',  help='The path to the file to convert.  filename or wildcard e.g. "*.log". Enclose the wildcard pattern in single or double quotes.')
parser.add_argument('output',  help='The output file to write the converted log')
parser.add_argument('function', help='The function to execute on the log files')
parser.add_argument('--method', help='The http method by which to filter', default=None)

args = parser.parse_args()

if args.function == None or args.function.strip() == "" or not args.function in functionlist:
    convert(args)
else:
    functionlist[args.function](args)


