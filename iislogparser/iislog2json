#!/usr/bin/python

from parsers import W3CIISLogParser
import argparse
import glob
import os
import cjson
import stopwatch
from reports import ByHourHitCounts, ByHourMaxHitCounts
from filters import MethodFilter
from outputs import JsonFileStream
import console

def convert(args):
    for file in glob.glob(args.file):
        filepath = os.path.abspath(file)
        outputpath = os.path.abspath(args.output)
        converter = W3CIISLogParser()
        converter.convert(filepath, outputpath)

def count_by_hour(args):
    print("processing...")
    timer = stopwatch.Timer()
    console.count_by_hour(args)
    timer.stop()
    print("completed in : {0} seconds".format(timer.elapsed))

functionlist = {
            'convert' : convert,
            'countbyhour' : count_by_hour
        }

parser = argparse.ArgumentParser(description='Convert IIS Log in W3C Format into JSON')


parser.add_argument('file',  help='The path to the file to convert.  filename or wildcard e.g. "*.log". Enclose the wildcard pattern in single or double quotes.')
parser.add_argument('-d','--outputdirectory',  help='The output directory to write the reports', default="./")
parser.add_argument('function', help='The function to execute on the log files')
parser.add_argument('-m','--method', help='The http method by which to filter', default=None)
parser.add_argument('--uI', help='The uri stem prefixes to include', default=[])
parser.add_argument('--uE', help='The uri stem prefixes to exclude', default=[])

args = parser.parse_args()

if args.function == None or args.function.strip() == "" or not args.function in functionlist:
    convert(args)
else:
    functionlist[args.function](args)


